@{
    ViewBag.Title = "Dispatch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Dispatch</h2>
@section ContentBody{


    <div class="row">
        <div class="panel-body" style="padding-bottom:0px;">
            <div class="panel panel-default">
                <div class="panel-heading">查询条件</div>
                <div class="panel-body">
                    <form id="formSearch" class="form-horizontal">
                        <div class="form-group" style="margin-top:15px">
                            <label class="control-label col-sm-1" for="txt_search_failuredevice">故障设备</label>
                            <div class="col-sm-3">
                                <select id="failureDevice" class="dropdown form-control">
                                    <option value="-1">请选择</option>
                                </select>
                            </div>
                            <label class="control-label col-sm-1" for="txt_search_time">发生时间</label>
                            <div class='col-sm-3 input-group date' id='div_search_fssj'>
                                <input type='text' class="form-control" id="txt_search_fssj" />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>

                            <div class="col-sm-3" style="text-align:right;">
                                <button type="button" id="btn_query" class="btn btn-primary" onclick="RefreshTable()">查询</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div>
            </div>
        </div>

        <table id="table_dispatch"></table>
    </div>


    @{Html.RenderAction("EngineerSelect", "Partial");}














    <script>
        $(function () {
            $('#div_search_fssj').datetimepicker({
                //日期格式化，只显示日期
                language: 'zh-CN',     //中文化
                todayBtn: true,
                pickerPosition: "bottom-left"
            });

            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();

            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();
        });




        var TableInit = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#table_dispatch').bootstrapTable({
                    url: '/Failure/GetAllApplicationsByUserName',         //请求后台的URL（*）
                    method: 'post',                      //请求方式（*）
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: true,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                       //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: true,
                    showColumns: true,                  //是否显示所有的列
                    showRefresh: true,                  //是否显示刷新按钮
                    minimumCountColumns: 1,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "SBBH",                     //每一行的唯一标识，一般为主键列
                    showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                   //是否显示父子表
                    queryParams: oTableInit.queryParams,
                    columns: [
                        { field: 'Order', title: '序号', sortable: true },
                        { field: 'DeviceShortName', title: '故障设备', sortable: true },
                        { field: 'BeginTime', title: '发生时间', sortable: true },
                        { field: 'StrLocation', title: '故障部位' },
                        { field: 'FailureAppearance', title: '故障现象', sortable: true },
                        { field: 'FailureDescription', title: '故障描述', sortable: true },
                         { field: 'State', title: '当前状态', sortable: true, formatter: cssFormatter },
                        { field: 'Modifiable', title: '操作', align: 'center', events: operateEvents, formatter: operateFormatter }
                    ]
                });
            }

            //得到查询的参数
            oTableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    name: "报告人A",   //页面大小
                    limit: params.limit,   //页面大小
                    offset: params.offset,  //页码
                    //order: params.order,
                    //ordername: params.sort,
                    sbbh: $("#failureDevice option:selected").val(),
                    fssj: $("#txt_search_fssj").val()
                };
                return temp;
            };
            return oTableInit;
        };
        function cssFormatter(value, row, index) {
            var state = row.State;
            var cssname = "";
            if (state == "审核中") {
                cssname = 'class="label label-default"';
            }
            return [
                '<span ' + cssname + '>' + row.State + '</span>'
            ].join('');
        };


        function operateFormatter(value, row, index) {
            return [
                '<button id="btn_dispatch" type="button" class="edit btn btn-default">',
                '<span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>派工',
                '</button>',
                '<button id="btn_reject" type="button" class="remove btn btn-default">',
                '<span class="glyphicon glyphicon-remove" aria-hidden="true"></span>驳回',
                ' </button>'
            ].join('');
        };
        window.operateEvents = {
            'click .edit': function (e, value, row, index) {
                $("#gzdevice").val(row.DeviceShortName);
                $("#gzfssj").val(row.BeginTime);
                $("#firstFailureLocation").find('option[text="" + cachData[index].FstLevFaultLocation + ""]').attr("selected", true);
                $("#gzxianxiang").val(row.FailureAppearance);
                $("#gzms").val(row.FailureDescription);
                $("#forGZShenQingId").val(row.Id);
                $('#myModal').modal();
            },
            'click .remove': function (e, value, row, index) {
                Delete(row.Id);
                RefreshTable();
            }
        };
    </script>







}

